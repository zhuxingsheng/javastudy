/*
 * Use a libraries map to define the dependency artifacts
 * It similar to the maven <dependencyManagement>
 */
ext {

	springFrameworkVersion 					= '4.0.5.RELEASE'
	springDataJpaVersion 					= '1.6.0.RELEASE'
	hibernateEntitymanagerVersion 			= '4.3.5.Final'
	tomcatVersion 							= '7.0.11'
	slf4jVersion							= '1.7.7'
	logbackVersion							= '1.1.2'
	venuslogVersion							= '1.0.3'
	lombokVersion							= '1.14.0'
	junitVersion 							= '4.11'
	mockitoVerion							= '1.9.5'
	hamcrestVersion							= '1.3'
	orikaVersion							= '1.4.5.1'
	servletApiVersion						= '3.0.1'
	jspApiVersion							= '2.2.1'
	elApiVersion							= '2.2.5'
	jstlApiVersion							= '1.2.1'
	jackson2Version							= '2.4.6'
	mybatisVersion							= '3.2.7'
	mybatisSpringVersion					= '1.2.2'
	mybatisGeneratorVersion					= '1.3.2'
	commonsLang3Version						= '3.3.2'
	commonsCollections4Version				= '4.0'
	commonsBeanutilsVersion					= '1.9.2'
	commonsPoolVersion						= '1.6'
	commonsCompressVersion					= '1.8.1'
	commonsFileuploadVersion				= '1.3.1'
	//commonsIoVersion						= '1.3.2'
	httpCoreVersion                         = '4.4.6'
	commonsHttpClientVersion				= '3.1'
	httpClientVersion                       = '4.5.3'
	druidVersion							= '1.0.5'
	c3p0Version								= '0.9.5-pre8'
	dbcpVersion								= '2.0.1'
	mysqlDriverVersion						= '5.1.31'
	validationApiVersion					= '1.1.0.Final'
	hibernateValidatorVersion				= '5.1.1.Final'
	reactorVersion							= '1.1.2.RELEASE'
	groovyVersion							= '2.3.10'
	ospVersion								= '2.6.14'
	venusVersion							= '1.7.3'
	mercuryVersion                      	= '4.0.4'
	h2Version                               = '1.4.187'
	validateInternalVersion					= '1.0.15'
	dpaaQaUtilsVersion                      = '0.2.0-SNAPSHOT'
	ospmockerVersion                        = '3.0.3'
	secFilterVersion                        = '1.0'
	userUtilVersion 						= '2.0.2' //1.1.3: retry connection reset exception
	userFrameworkVersion 					= '2.0.2'
	passportBaseServiceApiVersion 			= '0.4.6-SNAPSHOT'
	vipshopFrameworkVersion                 = '1.0.1'
	aliPayVersion                           = '2.0'
	neteaseSdkVersion                       = '2.0'
	sinaSdkVersion 							= '2.1'
	ospOauthApi                             = '1.0.3'
	kaixinSdkVersion                        = '2.1'
	springockitoVersion = '1.0.9'
	springockitoAnnotationsVersion = '1.0.9'
	asagrdVersion  = '1.3.3'

	libraries = [

			//spring base
			spring_context_support:    	"org.springframework:spring-context-support:${springFrameworkVersion}",
			//spring web
			spring_webmvc:			   	"org.springframework:spring-webmvc:${springFrameworkVersion}",
			//spring jdbc
			spring_jdbc:			   	"org.springframework:spring-jdbc:${springFrameworkVersion}",

			//spring_data_jpa
			spring_data_jpa:		   	"org.springframework.data:spring-data-jpa:${springDataJpaVersion}",

			reactor_core:				"org.projectreactor:reactor-core:${reactorVersion}",

			reactor_spring_context:		"org.projectreactor.spring:reactor-spring-context:${reactorVersion}",

			hibernate_entitymanager:   	"org.hibernate:hibernate-entitymanager:${hibernateEntitymanagerVersion}",

			slf4j_api:					"org.slf4j:slf4j-api:${slf4jVersion}",
			logback_classic:			"ch.qos.logback:logback-classic:${logbackVersion}",

			lombok:						"org.projectlombok:lombok:${lombokVersion}",

			orika_core:					"ma.glasnost.orika:orika-core:${orikaVersion}",
			orika_eclipse_tools:		"ma.glasnost.orika:orika-eclipse-tools:${orikaVersion}",

			servlet_api:				"javax.servlet:javax.servlet-api:${servletApiVersion}",
			jsp_api:					"javax.servlet.jsp:javax.servlet.jsp-api:${jspApiVersion}",
			el_api:						"javax.el:javax.el-api:${elApiVersion}",
			jstl_api:					"javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:${jstlApiVersion}",

			jackson_databind:			"com.fasterxml.jackson.core:jackson-databind:${jackson2Version}",

			//unit test
			spring_test:			   	"org.springframework:spring-test:${springFrameworkVersion}",
			junit:						"junit:junit:${junitVersion}",
			mockito_all:				"org.mockito:mockito-all:${mockitoVerion}",
			hamcrest_all:				"org.hamcrest:hamcrest-all:${hamcrestVersion}",

			//mybatis
			mybatis:					"org.mybatis:mybatis:${mybatisVersion}",
			mybatis_spring:				"org.mybatis:mybatis-spring:${mybatisSpringVersion}",
			mybatis_generator:			"org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}",

			//apache commons
			commons_lang3:				"org.apache.commons:commons-lang3:${commonsLang3Version}",
			commons_collections4:		"org.apache.commons:commons-collections4:${commonsCollections4Version}",
			commons_beanutils:			"commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}",
			commons_pool:				"commons-pool:commons-pool:${commonsPoolVersion}",
			commons_compress:			"org.apache.commons:commons-compress:${commonsCompressVersion}",
			commons_fileupload:			"commons-fileupload:commons-fileupload:${commonsFileuploadVersion}",
			//commons_io:					"org.apache.commons:commons-io:${commonsIoVersion}",
			http_core:                  "org.apache.httpcomponents:httpcore:${httpCoreVersion}",
			http_client:                "org.apache.httpcomponents:httpclient:${httpClientVersion}",
			commons_http_client:        "commons-httpclient:commons-httpclient:${commonsHttpClientVersion}",
			//druid
			druid:						"com.alibaba:druid:${druidVersion}",

			//dbcp
			dbcp:						"org.apache.commons:commons-dbcp2:${dbcpVersion}",

			//c3p0
			c3p0:						"com.mchange:c3p0:${c3p0Version}",

			//mysql
			mysql:						"mysql:mysql-connector-java:${mysqlDriverVersion}",

			//validator
			validation_api:				"javax.validation:validation-api:${validationApiVersion}",
			hibernate_validator:		"org.hibernate:hibernate-validator:${hibernateValidatorVersion}",

			//groovy
			groovy_all:					"org.codehaus.groovy:groovy-all:${groovyVersion}",

			//OSP
			osp_core:					"com.vip.osp:osp-core:${ospVersion}",
			osp_container:				"com.vip.osp:osp-container:${ospVersion}",
			osp_idlc:					"com.vip.osp:osp-idlc_2.10:${ospVersion}",
			osp_spring:					"com.vip.osp:osp-spring:${ospVersion}",
			osp_resttools:				"com.vip.osp:osp-resttools:${ospVersion}",
			osp_maven_plugin:			"com.vip.osp:osp-maven-plugin:${ospVersion}",
			osp_engine:			        "com.vip.osp:osp-engine:${ospVersion}",
			validate_internal_api:		"com.vip.internal:validate-internal-api:${validateInternalVersion}",
			venus_core:					"com.vip.venus:venus-core:${venusVersion}",
			venus_test:					"com.vip.venus:venus-test:${venusVersion}",
			venus_jdbc:					"com.vip.venus:venus-jdbc:${venusVersion}",
			venus_web:					"com.vip.venus:venus-web:${venusVersion}",
			venus_beanmapping_annotation:"com.vip.venus:venus-beanmapping-annotation:${venusVersion}",
			venus_mq:                   "com.vip.venus:venus-mq:${venusVersion}",
			venus_cache:                "com.vip.venus:venus-cache:${venusVersion}",
			venus_log:					"com.vip.logger:venus-log:${venuslogVersion}",
			vms:             			"com.vip.platform.middleware:vms:1.1.2",
			mercury_client_all:        	"com.vip.mercury:mercury-client-all:${mercuryVersion}",
			h2:                         "com.h2database:h2:${h2Version}",
			dpaaQaUtils:				"com.vip.dpaa.qa.utils:dpaa-qa-utils:${dpaaQaUtilsVersion}",
			ospmocker:                  "com.vip.venus:venus-ext-ospmocker:${ospmockerVersion}",
			secFilter:                  "vip.sec:secFilter:${secFilterVersion}",

			//user framework
			user_util                : "com.vipshop.user:util:${userUtilVersion}",
			user_framework           : "com.vipshop.user:framework:${userFrameworkVersion}",
			vipshop_framework        : "com.vipshop:vipshop_framework:${vipshopFrameworkVersion}",
			protostuff_runtime       : "com.dyuproject.protostuff:protostuff-runtime:1.0.6",
			protostuff_core          : "com.dyuproject.protostuff:protostuff-core:1.0.6",

			//osp-service-sdk
			passport_base_service_api: "com.vip.passport.api:base-service-api:${passportBaseServiceApiVersion}",
			osp_oauth_service_api:      "com.vip:osp-oauth-service-api:${ospOauthApi}",

			/** 第三方SDK **/
			apipay_sdk               : "com.alipay.api:alipay-java-sdk:${aliPayVersion}",
			netease_sdk              : "com.netease.api:netease-java-sdk:${neteaseSdkVersion}",
			sina_sdk                 : "com.sina.api:sina-java-sdk:${sinaSdkVersion}",
			kaixin_sdk               : "com.kaixin.api:kaixin-java-sdk:${kaixinSdkVersion}",


			springockito             : "org.kubek2k:springockito:${springockitoVersion}",
			springockito_annotations : "org.kubek2k:springockito-annotations:${springockitoAnnotationsVersion}",
			asgard_cache:                "com.vip.venus:asgard-cache:${asagrdVersion}",
			asgard_data:                 "com.vip.venus:asgard-data:${asagrdVersion}"
	]

}
